[
  {
    "apiVersion": "networking.k8s.io/v1",
    "kind": "NetworkPolicy",
    "metadata": {
      "labels": {
        "app.kubernetes.io/instance": "mock-release",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "apache",
        "app.kubernetes.io/version": "2.4.62",
        "helm.sh/chart": "apache-11.2.17"
      },
      "name": "mock-release-apache",
      "namespace": "foobar"
    },
    "spec": {
      "egress": [
        {}
      ],
      "ingress": [
        {
          "ports": [
            {
              "port": 8080
            },
            {
              "port": 8443
            }
          ]
        }
      ],
      "podSelector": {
        "matchLabels": {
          "app.kubernetes.io/instance": "mock-release",
          "app.kubernetes.io/name": "apache"
        }
      },
      "policyTypes": [
        "Ingress",
        "Egress"
      ]
    }
  },
  {
    "apiVersion": "policy/v1beta1",
    "kind": "PodDisruptionBudget",
    "metadata": {
      "labels": {
        "app.kubernetes.io/instance": "mock-release",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "apache",
        "app.kubernetes.io/version": "2.4.62",
        "helm.sh/chart": "apache-11.2.17"
      },
      "name": "mock-release-apache",
      "namespace": "foobar"
    },
    "spec": {
      "maxUnavailable": 1,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/instance": "mock-release",
          "app.kubernetes.io/name": "apache"
        }
      }
    }
  },
  {
    "apiVersion": "v1",
    "automountServiceAccountToken": false,
    "kind": "ServiceAccount",
    "metadata": {
      "labels": {
        "app.kubernetes.io/instance": "mock-release",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "apache",
        "app.kubernetes.io/version": "2.4.62",
        "helm.sh/chart": "apache-11.2.17"
      },
      "name": "mock-release-apache",
      "namespace": "foobar"
    }
  },
  {
    "apiVersion": "v1",
    "kind": "Service",
    "metadata": {
      "labels": {
        "app.kubernetes.io/instance": "mock-release",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "apache",
        "app.kubernetes.io/version": "2.4.62",
        "helm.sh/chart": "apache-11.2.17"
      },
      "name": "mock-release-apache",
      "namespace": "foobar"
    },
    "spec": {
      "externalTrafficPolicy": "Cluster",
      "loadBalancerSourceRanges": [],
      "ports": [
        {
          "name": "http",
          "port": 80,
          "targetPort": "http"
        },
        {
          "name": "https",
          "port": 443,
          "targetPort": "https"
        }
      ],
      "selector": {
        "app.kubernetes.io/instance": "mock-release",
        "app.kubernetes.io/name": "apache"
      },
      "sessionAffinity": "None",
      "type": "LoadBalancer"
    }
  },
  {
    "apiVersion": "apps/v1",
    "kind": "Deployment",
    "metadata": {
      "labels": {
        "app.kubernetes.io/instance": "mock-release",
        "app.kubernetes.io/managed-by": "Helm",
        "app.kubernetes.io/name": "apache",
        "app.kubernetes.io/version": "2.4.62",
        "helm.sh/chart": "apache-11.2.17"
      },
      "name": "mock-release-apache",
      "namespace": "foobar"
    },
    "spec": {
      "replicas": 1,
      "revisionHistoryLimit": 10,
      "selector": {
        "matchLabels": {
          "app.kubernetes.io/instance": "mock-release",
          "app.kubernetes.io/name": "apache"
        }
      },
      "strategy": {
        "type": "RollingUpdate"
      },
      "template": {
        "metadata": {
          "labels": {
            "app.kubernetes.io/instance": "mock-release",
            "app.kubernetes.io/managed-by": "Helm",
            "app.kubernetes.io/name": "apache",
            "app.kubernetes.io/version": "2.4.62",
            "helm.sh/chart": "apache-11.2.17"
          }
        },
        "spec": {
          "affinity": {
            "nodeAffinity": null,
            "podAffinity": null,
            "podAntiAffinity": {
              "preferredDuringSchedulingIgnoredDuringExecution": [
                {
                  "podAffinityTerm": {
                    "labelSelector": {
                      "matchLabels": {
                        "app.kubernetes.io/instance": "mock-release",
                        "app.kubernetes.io/name": "apache"
                      }
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  },
                  "weight": 1
                }
              ]
            }
          },
          "automountServiceAccountToken": false,
          "containers": [
            {
              "env": [
                {
                  "name": "BITNAMI_DEBUG",
                  "value": "false"
                },
                {
                  "name": "APACHE_HTTP_PORT_NUMBER",
                  "value": "8080"
                },
                {
                  "name": "APACHE_HTTPS_PORT_NUMBER",
                  "value": "8443"
                }
              ],
              "envFrom": null,
              "image": "docker.io/bitnami/apache:2.4.62-debian-12-r8",
              "imagePullPolicy": "IfNotPresent",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 180,
                "periodSeconds": 20,
                "successThreshold": 1,
                "tcpSocket": {
                  "port": "http"
                },
                "timeoutSeconds": 5
              },
              "name": "apache",
              "ports": [
                {
                  "containerPort": 8080,
                  "name": "http"
                },
                {
                  "containerPort": 8443,
                  "name": "https"
                }
              ],
              "readinessProbe": {
                "failureThreshold": 6,
                "httpGet": {
                  "path": "/",
                  "port": "http"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 10,
                "successThreshold": 1,
                "timeoutSeconds": 5
              },
              "resources": {
                "limits": {
                  "cpu": "150m",
                  "ephemeral-storage": "2Gi",
                  "memory": "192Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "ephemeral-storage": "50Mi",
                  "memory": "128Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsGroup": 1001,
                "runAsNonRoot": true,
                "runAsUser": 1001,
                "seLinuxOptions": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/opt/bitnami/apache/conf",
                  "name": "empty-dir",
                  "subPath": "app-conf-dir"
                },
                {
                  "mountPath": "/opt/bitnami/apache/logs",
                  "name": "empty-dir",
                  "subPath": "app-logs-dir"
                },
                {
                  "mountPath": "/tmp",
                  "name": "empty-dir",
                  "subPath": "tmp-dir"
                },
                {
                  "mountPath": "/opt/bitnami/apache/var/run",
                  "name": "empty-dir",
                  "subPath": "app-tmp-dir"
                }
              ]
            }
          ],
          "hostAliases": [
            {
              "hostnames": [
                "status.localhost"
              ],
              "ip": "127.0.0.1"
            }
          ],
          "initContainers": [
            {
              "args": [
                "-ec",
                "#!/bin/bash\n\n. /opt/bitnami/scripts/libfs.sh\n# We copy the logs folder because it has symlinks to stdout and stderr\nif ! is_dir_empty /opt/bitnami/apache/logs; then\n  cp -r /opt/bitnami/apache/logs /emptydir/app-logs-dir\nfi\n"
              ],
              "command": [
                "/bin/bash"
              ],
              "image": "docker.io/bitnami/apache:2.4.62-debian-12-r8",
              "imagePullPolicy": "IfNotPresent",
              "name": "preserve-logs-symlinks",
              "resources": {
                "limits": {
                  "cpu": "150m",
                  "ephemeral-storage": "2Gi",
                  "memory": "192Mi"
                },
                "requests": {
                  "cpu": "100m",
                  "ephemeral-storage": "50Mi",
                  "memory": "128Mi"
                }
              },
              "securityContext": {
                "allowPrivilegeEscalation": false,
                "capabilities": {
                  "drop": [
                    "ALL"
                  ]
                },
                "privileged": false,
                "readOnlyRootFilesystem": true,
                "runAsGroup": 1001,
                "runAsNonRoot": true,
                "runAsUser": 1001,
                "seLinuxOptions": {},
                "seccompProfile": {
                  "type": "RuntimeDefault"
                }
              },
              "volumeMounts": [
                {
                  "mountPath": "/emptydir",
                  "name": "empty-dir"
                }
              ]
            }
          ],
          "priorityClassName": "",
          "securityContext": {
            "fsGroup": 1001,
            "fsGroupChangePolicy": "Always",
            "supplementalGroups": [],
            "sysctls": []
          },
          "serviceAccountName": "mock-release-apache",
          "volumes": [
            {
              "emptyDir": {},
              "name": "empty-dir"
            }
          ]
        }
      }
    }
  }
]