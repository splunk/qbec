name: build
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  build-linux:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - uses: azure/setup-helm@v1
        with:
          version: "v3.3.1" # default is latest stable
        id: helm

      - uses: actions/checkout@v2

      - name: Install command dependencies
        run: |
          mkdir -p $HOME/go/bin
          export GOPATH=$HOME/go
          echo "GOPATH=$GOPATH" >> $GITHUB_ENV
          echo "GO_VERSION=$(go version | awk '{ print $3}' | sed 's/^go//')" >> $GITHUB_ENV
          echo "$HOME/go/bin" >> $GITHUB_PATH
          make install-ci create-cluster install

      - name: Build
        run: make build

      - name: Lint
        run: make lint

      - name: Test
        run: make test TEST_FLAGS="-tags integration"

      - name: Coverage Report
        run: make publish-coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: goreleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          args: release --snapshot --skip-publish --rm-dist --release-notes .release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-windows:
    name: Build(Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - uses: azure/setup-helm@v1
        with:
          version: "v3.3.1" # default is latest stable
        id: helm

      - uses: actions/checkout@v2

      - name: Install command dependencies
        run: |
          echo "GOPATH=$HOME/go" >> $GITHUB_ENV
          echo "GO_VERSION=$(go version | awk '{ print $3}' | sed 's/^go//')" >> $GITHUB_ENV
          echo "$HOME/go/bin" >> $GITHUB_PATH

      - name: Build
        run: make build

      - name: Test
        run: make test
